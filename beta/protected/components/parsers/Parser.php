<?php class Parser {    public $source;    public $items;         public  function __construct($source){                $this->source=$source;         $this->items=array();         $this->init();     }          //override if necessary     public function init(){                   }          public function setCache($b){         $this->cache=$b;     }     //if the event is in the cache retrieve it     public function getEventFromCache($uid){                       }     public function parse($num=null){                   //must be redefined           //$new=0;                 $cats=array();        foreach($this->source->categories as $cat){            $cats[]=$cat->id;        }                   $c=0;           $scraped=0;         //en aquest punt el parser ha creat l'array d'items                      // print_r($this->items);                               foreach($this->items as $item){                               //purificar text                         // $item->description=Yii::app()->format->html($item->description);                //$item->description = preg_replace('#<p[^>]*>(\s|&nbsp;?)*</p>#', '', $item->description);                       // $item->description=Yii::app()->format->ntext($item->description);                          if(is_array($item->description)) $item->description="";                                       //$item->description=strip_tags($item->description);                       //descartar tots els items del passat              // descartar items antics i de la cache          // if(  $item->isOld()  ){                           //  }else{                                           $item->lang=$this->source->lang;            $item->source_id=$this->source->id;             if($this->source->city2events){                              $item->city_id=$this->source->city_id;            }                        //add categories from source            $item->categories = array_merge($item->categories,$cats);                if(!$item->cached){                                             if( $this->source->scrape){                        if( $this->source->feed_type!="ical"){ //ical no te url i no cal especialment                                    if(!$this->scrape($item,$this->source)){                                       print "\r\nerror scraping: ".$item->url;                                       //todo marcar com item defectuos!                                                                           }                                    $scraped++;                                                                                                         	                                                                                                   }                    }                }                              //corregir description si cal                              //convertir punts seguits en punts apart (per corregir el problema de que el text apareix massa enganxat)                              $item->description = preg_replace('/\. /','<br/>',$item->description);               //todo aqui caldria netejar mes coses del text                                                       if($item->enddate==0){                    $item->enddate=$item->startdate;                    $item->endtime=$item->starttime;                }                                               //si es un item antic no es fa scrapping  ni geocoding. per estalviar recursos                //if(!$item->isOld()){ //si no és antic, aqui pot ser que tingui la data després de l'scrape                $item->setLocation(  ScraperUtils::purgeLocation($item->location));                                                                      $item->location= ScraperUtils::cleanString($item->location);                                                    //si location no conté nom població afegir-la                if(isset( $this->source->city )){                    if(strpos($item->location,$this->source->city->name)===false){                        if($item->location!=null)  $item->location.=", ";                        $item->location.=$this->source->city->name;                    }                    if($item->location=="") $item->location  =$this->source->city->name;                  }                                                 //TODO això no funciona print_r($item);                if($item->location=="" && $item->address!="" ) $item->setLocation($item->address);                if($item->address==""  && $item->location!="" ) $item->setAddress($item->location);                                           // if(!$item->isGeoEncoded() &&  !$item->cached){                    //geocode location                                                                                                       //postpone                    /*GeoCoder::encode( ($item->location), ($item->address),$item);                                                                            //si tot i aixi no s'ha pogut localitzar heretar posició de la font                    if(!$item->isGeoEncoded()){                        if($this->source->city){                            $item->geo_lat=$this->source->city->lat;                            $item->geo_lng=$this->source->city->lng;                            $item->geo_pre=3;                        }                                                                     }                                                             */              //  }else{                //fi si no és antic             //       $item->old=true;              //    print "item too old to save";                //  }                                                              //  }else{                                                         // }       //  }          $c++;                    //limitar en el cas que s'estigui fent scraping          if( $this->source->scrape ){              $max=Yii::app()->params['max_items_per_cron'];              if(($scraped==$max)){                  //eliminar els seguents items de la llista                                  //todo no pot ser eliminar! però si cal limitar scraping perquè no es bloquegi                  for($i=$c;$i<count($this->items);$i++){                      $this->items[$i]->pending=true;                  }                  //$this->items=array_slice($this->items,0,$c);                                   break;                                }          }                                                     if($c==$num) break;         }                                   $total=count($this->items);                                         $cached=0;         for($i=0;$i<$total;$i++){             if($this->items[$i]->cached){                 $cached++;             }else{                 if(!$this->items[$i]->pending){                     print "*** guarda a la cache...";                    EventItem::setCache($this->items[$i]);                 }             }         }                                  // print_r($this->items);            return $this->items;              }          /*     public function preSave(&$e){                  //geolocation                  if(!$item->isGeoEncoded()){                    $loc=GeoCoder::encode($e->location,$e->address,$e);                  }      }*/          /*      public function doSave(&$e){        if( !$e->save(false) ){           // print_r($e->getAttributes());            //print_r( $e->getErrors());            throw new CException('Error al guardar event');            return false;        }else{            $this->afterSave($e);        }                 return true;                                 }     public function afterSave(&$e){                  //assignar categories de font                  $cats=array();         foreach($this->source->categories as $cat){             $cats[]=$cat->id;         }				 $e->categories = $cats;				 $e->saveRelated('categories');                           }        */          //per defecte busca coses bàsiques.. com per ex una imatge significativa      public  function scrape(&$e){                //if(!$ok){            $sc=new Scraper();            if( $sc->init($e->url)){                 return $sc->scrape($e,$this->source);                             }else{                return false;            }      //  }    }}